name: Rust

env:
  CARGO_TERM_COLOR: always

on:
  pull_request:
    branches-ignore: [ "dev*", "next", "nightly*" ]
  push:
    branches-ignore: [ "dev*", "next", "nightly*" ]
    tags: [ "v*.*.*" ]
  schedule:
    - cron: "30 9 * * *" # 9:30 UTC
  workflow_dispatch:
    inputs:
      publish:
        default: true
        description: 'Publish'
        required: true
        type: boolean

jobs:
  build:
    name: Build
    strategy:
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
        toolchain: [nightly, stable]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup langspace
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        run: |
          sudo apt install -y protobuf-compiler
          rustup update
          rustup default ${{ matrix.toolchain }}
      - name: Build (workspace)
        run: cargo build --release -v --workspace
      - name: Bench (workspace)
        if: ${{ matrix.toolchain == 'nightly' }}
        run: cargo bench -v --workspace
      - name: Test (all)
        run: cargo test --all --all-features -v
  features:
    if: ${{ github.event.inputs.publish }}
    name: Features
    needs: [ build ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        pkg: 
          - contained-core
          - contained-music
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt install -y protobuf-compiler
      - name: Publish (${{ matrix.pkg }})
        run: cargo publish --all-features -v -p ${{ matrix.pkg }} --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
  publish:
    if: ${{ github.event.inputs.publish }}
    name: Publish
    needs: [ build, features ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt install -y protobuf-compiler
      - name: Publish (contained)
        run: cargo publish --all-features -v -p contained-sdk --token ${{ secrets.CARGO_REGISTRY_TOKEN }}